
	I. Applying exclusions (RECENTLY_PLAYED_THRESHOLD) in all cases.

	II. /songs:

		1. Initial Load:
			Both User & Guest:
				a. Fetch Songs from DB.
				b. Return only INITIAL_SONG_COUNT songs from DB and shuffling the results.
				c. If song count is less than MINIMUM_SONG_COUNT, fetch suggestions from AI.
				d. Return INITIAL_SONG_COUNT.

		2. Subsequent Load:
			User
				a. Fetch songs from DB.
				b. New songs not heard by user, but present in DB. (Maximum of (NEW_SONG_RATIO) * DEFAULT_SONG_COUNT).
				c. Maximum of (1 - NEW_SONG_RATIO) * DEFAULT_SONG_COUNT already heard songs by user.
				d. If still the total songs selected less than DEFAULT_SONG_COUNT, we will fetch suggestions from AI.
				e. Lower cap - DEFAULT_SONG_COUNT. (In Both cases - Fetched from DB & when AI is triggered)
				f. Upper cap - DEFAULT_SONG_COUNT. (In Both cases - Fetched from DB & when AI is triggered)
			
			Guest:
				a. Fetch songs from DB.
				b. If still the total songs selected less than DEFAULT_SONG_COUNT, we will fetch suggestions from AI.
				c. Lower cap - DEFAULT_SONG_COUNT. (In Both cases - Fetched from DB & when AI is triggered)
				d. Upper cap - DEFAULT_SONG_COUNT. (In Both cases - Fetched from DB & when AI is triggered)

	III. /search:

		1.Initial Load:
			Both User & Guest:
				a. Fetch Songs from DB.
				b. Return Any Count of songs from DB if available.
				c. If song count is less than MINIMUM_SONG_COUNT, fetch suggestions from AI.
				d. Return INITIAL_SONG_COUNT if AI is triggered.

		2. Subsequent Load:
			Both User & Guest:
				a. Fetch songs from DB. 
				b. Return Any Count of songs from DB if available.
				c. If song count is less than MINIMUM_SONG_COUNT, fetch suggestions from AI.
				d. Lower cap - MINIMUM_SONG_COUNT when AI is triggered.
				e. Upper cap - DEFAULT_SONG_COUNT when AI is triggered.